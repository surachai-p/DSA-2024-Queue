1. Queue ต่างจาก Stack อย่างไร?
ตอบ Queue (คิว) เป็นโครงสร้างข้อมูลที่ทำงานตามหลัก FIFO (First In, First Out) ซึ่งหมายความว่า ข้อมูลที่ถูกเพิ่มเข้ามาก่อนจะถูกดึงออกมาก่อน เช่น การรอคิวที่ธนาคาร
Stack (สแตก) เป็นโครงสร้างข้อมูลที่ทำงานตามหลัก LIFO (Last In, First Out) ซึ่งหมายความว่า ข้อมูลที่ถูกเพิ่มเข้ามาล่าสุดจะถูกดึงออกมาก่อน เช่น การซ้อนกระดาษ


2.เพราะเหตุใดการ dequeue จึงใช้ pop(0) แทนที่จะเป็น pop()?
ตอบ การใช้ pop(0) ในการ dequeue เป็นการดึงข้อมูลจากตำแหน่งแรก (ซึ่งคือเริ่มต้นของคิว) โดยตำแหน่ง 0 คือตำแหน่งแรกในคิว ซึ่งการใช้ pop() แบบปกติจะดึงข้อมูลจากตำแหน่งสุดท้าย (ท้ายคิว) ซึ่งไม่เหมาะสมกับลักษณะการทำงานของคิวที่ต้องการให้ข้อมูลที่เข้ามาก่อนออกก่อน


3.ยกตัวอย่างการประยุกต์ใช้ Queue ในชีวิตประจำวันมา 3 ตัวอย่าง
ตอบ การรอคิวที่ธนาคาร: ลูกค้าที่มาถึงก่อนจะได้รับบริการก่อน
ระบบการพิมพ์ในเครื่องพิมพ์: เอกสารที่เข้ามาก่อนจะถูกพิมพ์ก่อน
ระบบคิวในรถไฟฟ้าหรือบัส: ผู้โดยสารที่มาถึงก่อนจะได้ขึ้นก่อน


4.หากต้องการทำ Priority Queue จะต้องปรับปรุงโค้ดอย่างไร?
ตอบ สำหรับ Priority Queue คุณต้องจัดลำดับความสำคัญของข้อมูลที่อยู่ในคิว โดยที่ข้อมูลจะไม่ถูกดึงออกตามลำดับที่เข้ามา แต่จะถูกดึงออกตามลำดับของความสำคัญที่กำหนด
โค้ดที่ใช้จะต้องมีการเปลี่ยนแปลงเพื่อรองรับการเปรียบเทียบและการจัดลำดับข้อมูลตามระดับความสำคัญ เช่น การใช้ heap หรือการจัดการลำดับความสำคัญในคิว
